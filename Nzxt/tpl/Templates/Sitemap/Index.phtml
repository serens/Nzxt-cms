<?= $this->renderPartial($this->templateDir . '/Partials/DialogHeader.phtml', ['title' => 'Sitemap']) ?>

<fieldset class="sitemap-breadcrumb">
    <legend>You are here</legend>

    <?php if ($this->startNode): ?>
        <div class="help-item">
            This is the path to the node you are editing right now.
        </div>

        <ul>
            <?php foreach (($parents = array_reverse($this->startNode->getParents())) as $key => $parent): ?>
                <li>
                    <?php if ($key > 0): ?>
                        <i class="fa fa-angle-right"></i>
                    <?php endif; ?>
                    <a href="<?= $this->linkBuilder->build('sitemap', ['#node' => $parent->getID()]) ?>"><?= $parent->getTitle() ?></a>
                </li>
            <?php endforeach; ?>
            <li>
                <?php if (count($parents)): ?>
                    <i class="fa fa-angle-right"></i>
                <?php endif; ?>
                <?= $this->startNode->getTitle() ?>
            </li>
        </ul>
    <?php endif; ?>
</fieldset>

<fieldset class="sitemap-search">
    <legend>Search</legend>

    <form action="<?= $this->linkBuilder->build('sitemap:ajax:search') ?>" method="get">
        <label for="needle">
            Search for title or id
            <div class="help-item">You can search for nodes by entering its title or node id.</div>
        </label>

        <input type="text" id="needle" name="needle" value="">

        <div class="search-result">
            <div class="result-listing">

            </div>

            <div class="no-results">
                <i class="fa fa-fw fa-info-circle"></i> No nodes found.
            </div>
        </div>
    </form>
</fieldset>

<fieldset class="sitemap-tree">
    <legend>Sitemap</legend>

    <div class="help-item">
        <p>You can drag a node into another node to change the parent of a node.</p>
    </div>

    <div class="sitemap-content"></div>
</fieldset>

<script>
    $(function() {
        var AnimationConfig = {
            duration: 500, easing: 'easeOutExpo'
        };

        var Sitemap = {
            container: $('.sitemap-tree'),
            init: function() {
                $('.sitemap-content', this.container).fileTree({
                    persist: true,
                    cookieName: 'Nzxt.fileTree.lastState',
                    root: <?= $this->startNode->getID() ?>,
                    script: '<?= $this->linkBuilder->build('sitemap:ajax:children') ?>',
                    scriptParamName: 'parent',
                    triggerSelector: 'li a.toggle',
                    expandSpeed: AnimationConfig.duration,
                    collapseSpeed: AnimationConfig.duration,
                    expandEasing: AnimationConfig.easing,
                    collapseEasing: AnimationConfig.easing,
                    onDataLoaded: this.renderData,
                    onSelect: this.onSelect,
                    onBeforeLoad: this.onBeforeLoad,
                    onAfterLoad: this.onAfterLoad
                });
            },
            hide: function() {
                this.container.stop().fadeOut(AnimationConfig);
            },
            show: function() {
                this.container.stop().fadeIn(AnimationConfig);
            },
            dropHandler: function(e, ui) {
                var $source  = ui.draggable.find('span');
                var $target  = $(this);
                var moveData = {
                    source: $source.data('node'),
                    target: $target.data('node')
                };

                parent.Nzxt.showLoading(true);

                $.ajax('<?= $this->linkBuilder->build('sitemap:ajax:move') ?>', {
                    method: 'post',
                    data: moveData,
                    dataType: 'json',
                    success: function(data, textStatus, jqXHR) {
                        parent.Nzxt.showLoading(false);

                        // Update the tree by reloading the target and removing the source from the DOM.
                        $target.closest('li[data-movable]').removeClass().addClass('collapsed').children('a.toggle').trigger('click');
                        ui.draggable.remove();
                    }
                });
            },
            onBeforeLoad: function() {
                parent.Nzxt.showLoading(true);
            },
            onSelect: function($selection, e) {
                e.preventDefault();
                parent.Nzxt.Dialog.closeAndGoto($selection.attr('href'));
            },
            onAfterLoad: function($c) {
                parent.Nzxt.showLoading(false);

                $('li[data-movable]', $c).draggable({
                    revert: 'invalid',
                    handle: 'i.fa',
                    opacity: 0.6
                });

                $('span[data-target]', $c).droppable({
                    tolerance: 'pointer',
                    drop: Sitemap.dropHandler
                });
            },
            renderData: function(data) {
                var html = '';

                for (var section in data.sections) {
                    if (section) {
                        html += '<li class="section"><span data-target data-node="' + data.pid + ':' + section + '">' + section + '</span><ul>';
                    }

                    data.sections[section].forEach(function(child) {
                        var movable = child.isMovable ? 'data-movable' : '';
                        var target  = child.isDropTarget ? 'data-target' : '';
                        var icon    = '<i class="' + child.icon + '"></i>';
                        var caption = '<a class="caption" title="ID #' + child.id + '" href="' + child.uri + '">' + child.title + '</a>';
                        var item    = '<span data-node="' + child.id + '" ' + target + '>' + icon + caption + '</span>';

                        html += (child.hasChildren)
                            ? '<li ' + movable + ' class="collapsed"><a class="toggle" href="#" rel="' + child.id + '"><i class="fa"></i></a>' + item + '</li>'
                            : '<li ' + movable + '><i class="fa"></i>' + item + '</li>';
                    });

                    if (section) {
                        html += '</ul></li>';
                    }
                }

                return '<ul style="display: none;">' + html + '</ul>';
            }
        };

        var Search = {
            container: $('.sitemap-search'),
            busy: false,
            init: function() {
                $('input', this.container).on('keyup', function() {
                    if ($(this).val().length >= 1) {
                        Sitemap.hide();
                        Search.doSearch();
                    } else {
                        Sitemap.show();
                        Search.Result.hide();
                    }
                })
            },
            doSearch: function() {
                if (Search.busy) {
                    return;
                }

                var $form = $('form', this.container);

                Search.busy = true;
                parent.Nzxt.showLoading(true);

                $.ajax($form.attr('action'), {
                    method: $form.attr('method').toUpperCase(),
                    data: $form.serialize(),
                    cache: false,
                    dataType: 'json',
                    success: function(data) {
                        parent.Nzxt.showLoading(false);
                        Search.Result.renderData(data);
                        Search.Result.show();
                        Search.busy = false;
                    }
                });
            },
            Result: {
                container: $('.search-result'),
                hide: function() {
                    this.container.stop().fadeOut(AnimationConfig);
                },
                show: function() {
                    this.container.stop().fadeIn(AnimationConfig);
                },
                renderData: function(data) {
                    var $noResults = $('.no-results', this.container);
                    var $listing   = $('.result-listing', this.container);

                    if (0 === data['result'].length) {
                        $noResults.show();
                        $listing.hide();
                    } else {
                        var html = '';

                        html += (1 == data['result'].length)
                            ? '<li>1 node found:</li>'
                            : '<li>' + data['result'].length + ' nodes found:</li>';

                        data['result'].forEach(function (resultItem) {
                            html += '<li>';
                            html += '<div class="header">';
                            html += '<i class="' + resultItem['icon'] + ' fa-fw"></i> ';
                            html += '<a href="#" onclick="parent.Nzxt.Dialog.closeAndGoto(\'' + resultItem['uri'] + '\');">' + resultItem['title'] + '</a>';
                            html += '</div>';
                            html += '<div class="meta">';
                            html += resultItem['meta'];
                            html += '</div>';
                            html += '</li>';
                        });

                        $noResults.hide();
                        $listing.html('<ol>' + html + '</ol>').show();
                    }
                }
            }
        };

        Sitemap.init();
        Search.init();
    });
</script>
